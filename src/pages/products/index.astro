---
import MainLayout from "@/layouts/MainLayout.astro";
import { products, categories } from "@/data/products";
// Get URL parameters for initial state
const { searchParams } = Astro.url;
const initialCategory = searchParams.get('category');
const initialPriceRange = searchParams.get('price');
const searchQuery = searchParams.get('search');

// Filter products based on URL parameters
let filteredProducts = [...products];

if (initialCategory) {
  filteredProducts = filteredProducts.filter(p => p.category === initialCategory);
}

if (initialPriceRange) {
  switch(initialPriceRange) {
    case 'under-70':
      filteredProducts = filteredProducts.filter(p => p.price < 70);
      break;
    case '70-90':
      filteredProducts = filteredProducts.filter(p => p.price >= 70 && p.price <= 90);
      break;
    case 'over-90':
      filteredProducts = filteredProducts.filter(p => p.price > 90);
      break;
  }
}

// Apply search filter if present
if (searchQuery) {
  const query = searchQuery.toLowerCase().trim();
  filteredProducts = filteredProducts.filter(p => 
    p.name.toLowerCase().includes(query) ||
    p.description.toLowerCase().includes(query) ||
    p.category.toLowerCase().includes(query)
  );
}
---

<MainLayout title="Products">
  <div class="container mx-auto px-4 py-12 max-w-[1920px]">
    <!-- Hero Section -->
    <div class="mb-12 text-center">
      <h1 class="text-5xl font-bold mb-4 dark:text-white">
        Our Perfume Collection
      </h1>
      <p class="text-muted-foreground max-w-2xl mx-auto dark:text-gray-300">
        Discover our curated selection of premium fragrances for every occasion.
      </p>
    </div>

    <!-- Filter and Sort Bar -->
    <div
      class="flex flex-col sm:flex-row justify-between items-center mb-8 bg-gray-50 dark:bg-gray-800/50 p-4 rounded-lg"
    >
      <div class="mb-4 sm:mb-0">
        <span class="text-muted-foreground dark:text-gray-300 mr-2"
          >Showing:</span
        >
        <span class="font-medium dark:text-white" id="product-count"
          >{filteredProducts.length} perfumes</span
        >
      </div>
      <div class="flex items-center space-x-4">
        <!-- Mobile filter toggle button -->
        <button
          id="mobile-filter-toggle"
          class="flex items-center lg:hidden bg-white dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-md px-3 py-1.5 text-sm"
        >
          <i class="fas fa-filter h-4 w-4 mr-1"></i>
          Filters
        </button>
        <label for="sort" class="text-muted-foreground dark:text-gray-300"
          >Sort by:</label
        >
        <select
          id="sort"
          class="bg-white dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-md px-3 py-1.5 text-sm"
        >
          <option value="featured">Featured</option>
          <option value="price-asc">Price: Low to High</option>
          <option value="price-desc">Price: High to Low</option>
          <option value="name-asc">Name: A-Z</option>
        </select>
      </div>
    </div>

    <div class="flex flex-col lg:flex-row gap-8">
      <!-- Mobile filter sidebar - hidden by default -->
      <div id="mobile-filter-sidebar" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden">
        <div class="bg-white dark:bg-gray-800 w-4/5 max-w-xs h-full overflow-y-auto p-4 transform transition-transform duration-300">
          <div class="flex justify-between items-center mb-6">
            <h3 class="text-xl font-semibold dark:text-white">Filters</h3>
            <button id="close-mobile-filter" class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200">
              <i class="fas fa-times h-6 w-6"></i>
            </button>
          </div>
          
          <!-- Categories in mobile view -->
          <div class="mb-6">
            <h3 class="text-lg font-semibold mb-3 dark:text-white border-b pb-2 border-gray-100 dark:border-gray-700">
              Categories
            </h3>
            <ul class="space-y-3">
              <li>
                <a
                  href="/products"
                  class=`flex items-center ${!initialCategory ? 'text-primary font-medium dark:text-primary-400' : 'text-muted-foreground hover:text-primary transition-colors dark:text-gray-400 dark:hover:text-primary-400'}`
                >
                  <span class="mr-2">•</span>
                  All Categories
                </a>
              </li>
              {
                categories.map((category) => (
                  <li>
                    <a
                      href={`/products?category=${category}`}
                      class=`flex items-center ${initialCategory === category ? 'text-primary font-medium dark:text-primary-400' : 'text-muted-foreground hover:text-primary transition-colors dark:text-gray-400 dark:hover:text-primary-400'}`
                    >
                      <span class="mr-2">•</span>
                      {category}
                    </a>
                  </li>
                ))
              }
            </ul>
          </div>
          
          <!-- Remove the Apply filters button since links work directly -->
          <button id="close-mobile-filters" class="w-full mt-6 bg-primary hover:bg-primary/90 text-white py-2 rounded-md">
            Close
          </button>
        </div>
      </div>

      <!-- Desktop sidebar filters - hidden on mobile -->
      <aside class="w-full lg:w-72 space-y-8 sticky top-24 self-start hidden lg:block">
        <div
          class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-sm border border-gray-100 dark:border-gray-700"
        >
          <h3
            class="text-xl font-semibold mb-4 dark:text-white border-b pb-2 border-gray-100 dark:border-gray-700"
          >
            Categories
          </h3>
          <ul class="space-y-3">
            <li>
              <a
                href="/products"
                class=`flex items-center ${!initialCategory ? 'text-primary font-medium dark:text-primary-400' : 'text-muted-foreground hover:text-primary transition-colors dark:text-gray-400 dark:hover:text-primary-400'}`
              >
                <span class="mr-2">•</span>
                All Categories
              </a>
            </li>
            {
              categories.map((category) => (
                <li>
                  <a
                    href={`/products?category=${category}`}
                    class=`flex items-center ${initialCategory === category ? 'text-primary font-medium dark:text-primary-400' : 'text-muted-foreground hover:text-primary transition-colors dark:text-gray-400 dark:hover:text-primary-400'}`
                  >
                    <span class="mr-2">•</span>
                    {category}
                  </a>
                </li>
              ))
            }
          </ul>
        </div>

      </aside>

      <!-- Product grid -->
      <div class="flex-1">
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6" id="products-grid">
          {
            filteredProducts.map((product) => (
              <div class="group bg-white dark:bg-gray-800 rounded-xl overflow-hidden border border-gray-100 dark:border-gray-700 shadow-sm hover:shadow-md transition-all duration-300">
                <a href={`/products/${product.id}`} class="block">
                  <div class="relative">
                    <div class="relative h-[400px] w-full overflow-hidden flex items-center justify-center">
                      <img
                        src={product.image1}
                        alt={product.name}
                        class="h-full w-full object-cover absolute inset-0 transition-transform duration-500 group-hover:scale-105"
                        loading="lazy"
                      />
                    </div>
                    <div class="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
                    <button class="absolute bottom-4 right-4 bg-white dark:bg-gray-800 text-primary dark:text-primary-400 p-2.5 rounded-full shadow-md opacity-0 group-hover:opacity-100 transition-opacity duration-300 hover:bg-gray-50 dark:hover:bg-gray-700">
                      <i class="fas fa-heart w-5 h-5"></i>
                    </button>
                  </div>
                  <div class="p-4">
                    <div class="flex justify-between mb-1">
                      <span class="text-xs font-medium px-2.5 py-0.5 rounded-full bg-gray-100 dark:bg-gray-700 text-muted-foreground dark:text-gray-300">
                        {product.category}
                      </span>
                    </div>
                    <h3 class="text-lg font-semibold mt-2 dark:text-white">
                      {product.name}
                    </h3>
                    <p class="mt-2 text-sm text-muted-foreground dark:text-gray-400 line-clamp-2">
                      {product.description}
                    </p>
                    <div class="mt-4 flex justify-between items-center">
                      <p class="text-xl font-bold dark:text-white">
                        ${product.price.toFixed(2)}
                      </p>
                    </div>
                  </div>
                </a>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</MainLayout>

<script>
  // Get all the products data
  interface Product {
    id: string;
    name: string;
    description: string;
    price: number;
    image1: string;
    category: string;
  }

  const allProducts: Product[] = JSON.parse(document.getElementById('products-data')?.getAttribute('data-products') || '[]');
  let filteredProducts = [...allProducts];
  
  // Get DOM elements
  const sortSelect = document.getElementById('sort');
  const productsGrid = document.getElementById('products-grid');
  const productCount = document.getElementById('product-count');

  // Mobile filter elements
  const mobileFilterToggle = document.getElementById('mobile-filter-toggle');
  const mobileFilterSidebar = document.getElementById('mobile-filter-sidebar');
  const closeMobileFilterBtn = document.getElementById('close-mobile-filter');
  const closeMobileFiltersBtn = document.getElementById('close-mobile-filters');

  // Function to update product display
  function updateProducts() {
    // Get URL parameters for category filter and search
    const urlParams = new URLSearchParams(window.location.search);
    const categoryParam = urlParams.get('category');
    const searchParam = urlParams.get('search');
    
    // Filter products
    let filtered = [...allProducts];
    
    // Apply category filter if present
    if (categoryParam) {
      filtered = filtered.filter(p => p.category === categoryParam);
    }

    // Apply search filter if present
    if (searchParam) {
      const query = searchParam.toLowerCase().trim();
      filtered = filtered.filter(p => 
        p.name.toLowerCase().includes(query) ||
        p.description.toLowerCase().includes(query) ||
        p.category.toLowerCase().includes(query)
      );
    }

    // Sort products
    const sortValue = (sortSelect as HTMLSelectElement)?.value;
    if (sortValue) {
      switch(sortValue) {
        case 'price-asc':
          filtered.sort((a, b) => a.price - b.price);
          break;
        case 'price-desc':
          filtered.sort((a, b) => b.price - a.price);
          break;
        case 'name-asc':
          filtered.sort((a, b) => a.name.localeCompare(b.name));
          break;
        // Add more sorting options as needed
      }
    }

    // Update product count
    if (productCount) {
      productCount.textContent = `${filtered.length} perfumes`;
    }

    // Update grid if client-side rendering is needed
    if (productsGrid) {
      productsGrid.innerHTML = filtered.map(product => `
        <div class="group bg-white dark:bg-gray-800 rounded-xl overflow-hidden border border-gray-100 dark:border-gray-700 shadow-sm hover:shadow-md transition-all duration-300">
          <a href="/products/${product.id}" class="block">
            <div class="relative">
              <img
                src="${product.image1}"
                alt="${product.name}"
                class="h-[300px] w-full object-cover transition-transform duration-500 group-hover:scale-105"
              />
              <div class="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              <button class="absolute bottom-4 right-4 bg-white dark:bg-gray-800 text-primary dark:text-primary-400 p-2.5 rounded-full shadow-md opacity-0 group-hover:opacity-100 transition-opacity duration-300 hover:bg-gray-50 dark:hover:bg-gray-700">
                <i class="fas fa-heart w-5 h-5"></i>
              </button>
            </div>
            <div class="p-4">
              <div class="flex justify-between mb-1">
                <span class="text-xs font-medium px-2.5 py-0.5 rounded-full bg-gray-100 dark:bg-gray-700 text-muted-foreground dark:text-gray-300">
                  ${product.category}
                </span>
              </div>
              <h3 class="text-lg font-semibold mt-2 dark:text-white">
                ${product.name}
              </h3>
              <p class="mt-2 text-sm text-muted-foreground dark:text-gray-400 line-clamp-2">
                ${product.description}
              </p>
              <div class="mt-4 flex justify-between items-center">
                <p class="text-xl font-bold dark:text-white">
                  $${product.price.toFixed(2)}
                </p>
              </div>
            </div>
          </a>
        </div>
      `).join('');
    }
  }

  // Mobile filter functions
  function openMobileFilterSidebar() {
    if (mobileFilterSidebar) {
      mobileFilterSidebar.classList.remove('hidden');
      document.body.style.overflow = 'hidden'; // Prevent scrolling
    }
  }

  function closeMobileFilterSidebar() {
    if (mobileFilterSidebar) {
      mobileFilterSidebar.classList.add('hidden');
      document.body.style.overflow = '';
    }
  }

  // Add event listeners
  sortSelect?.addEventListener('change', updateProducts);
  
  // Mobile filter event listeners
  if (mobileFilterToggle) {
    mobileFilterToggle.addEventListener('click', openMobileFilterSidebar);
  }
  
  if (closeMobileFilterBtn) {
    closeMobileFilterBtn.addEventListener('click', closeMobileFilterSidebar);
  }
  
  if (closeMobileFiltersBtn) {
    closeMobileFiltersBtn.addEventListener('click', closeMobileFilterSidebar);
  }

  // Close mobile filter when clicking outside
  if (mobileFilterSidebar) {
    mobileFilterSidebar.addEventListener('click', (e) => {
      if (e.target === mobileFilterSidebar) {
        closeMobileFilterSidebar();
      }
    });
  }

  // Initialize products
  updateProducts();
</script>

<!-- Hidden element to store products data -->
<div id="products-data" data-products={JSON.stringify(products)} style="display: none;"></div>

<!-- Font Awesome -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
